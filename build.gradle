buildscript {
    ext {
        grailsVersion = project.grailsVersion
        gormVersion = project.gormVersion
        esVersion = project.elasticsearchVersion
    }
    repositories {
        mavenLocal()
        maven { url "https://repo.grails.org/grails/core" }
        maven { url 'https://artifacts.elastic.co/maven' }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
        classpath 'org.asciidoctor:asciidoctor-gradle-plugin:1.5.3'
        classpath 'org.ajoberstar:gradle-git:1.4.2'
        classpath "org.grails.plugins:hibernate5:${gormVersion - ".RELEASE"}"
    }
}

plugins {
    id "com.jfrog.bintray" version "1.8.5"
    id "com.jfrog.artifactory" version "4.9.8"
    id "de.undercouch.download" version "4.0.0"
    id "cgoit.gradle.elasticsearch" version "0.2.1"
    id "com.dorongold.task-tree" version "1.5"
}

version '2.7.4'
group "de.cgoit.grails.plugins"

String repoName = 'elasticsearch-grails-plugin'

apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: "org.grails.grails-plugin"
apply plugin: "org.grails.grails-plugin-publish"
apply plugin: "org.grails.grails-gsp"
apply plugin: 'maven-publish'

ext {
    gradleWrapperVersion = project.gradleWrapperVersion
    esVersion = project.elasticsearchVersion
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenLocal()
    mavenCentral()
    maven { url "https://repo.grails.org/grails/core" }
}

dependencyManagement {
    imports {
        mavenBom "org.grails:grails-bom:$grailsVersion"
    }
    applyMavenExclusions false
}

jar {
    exclude "test/**"
    exclude "test/**/**"
}

groovydoc {
    exclude "test/**"
    exclude "test/**/**"
}

sourcesJar {
    exclude "test/**"
    exclude "test/**/**"

    classifier = 'sources'
}

dependencies {
    provided 'org.springframework.boot:spring-boot-starter-logging'
    provided "org.springframework.boot:spring-boot-starter-actuator"
    provided "org.springframework.boot:spring-boot-autoconfigure"
    provided "org.springframework.boot:spring-boot-starter-tomcat"
    provided "org.grails:grails-web-boot"
    provided "org.grails:grails-dependencies"

    provided "org.grails:grails-plugin-services"
    provided "org.grails:grails-plugin-domain-class"

    compile "org.grails:grails-core"
    compile "org.grails.plugins:hibernate5"
    compile "org.grails.plugins:cache"
    compile "org.hibernate:hibernate-ehcache"

    compile "org.apache.logging.log4j:log4j-api:2.7"
    compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.7'

    compile "org.elasticsearch:elasticsearch:${esVersion}"
    compile group: 'org.elasticsearch.client', name: 'elasticsearch-rest-high-level-client', version: esVersion
    compile group: 'org.locationtech.spatial4j', name: 'spatial4j', version: '0.6'
    //compile group: 'org.codehaus.gpars', name: 'gpars', version: '1.2.1'

    console "org.grails:grails-console"

    profile "org.grails.profiles:web-plugin"

    testRuntime 'com.spatial4j:spatial4j:0.4.1'
    testRuntime 'org.apache.tomcat:tomcat-jdbc'

    testCompile "org.grails:grails-gorm-testing-support"
    testCompile "org.grails:grails-plugin-testing"
    testCompile "org.grails:grails-web-testing-support"

    testCompile 'com.vividsolutions:jts:1.13'
    testCompile 'com.googlecode.json-simple:json-simple:1.1.1'

    compile fileTree(dir: "libs/elasticsearch", include: '*.jar')
}

task cleanLibsDir(type: Delete) {
    delete fileTree(dir: 'libs')
}

task wrapper(type: Wrapper) {
    gradleVersion = gradleWrapperVersion
}

check.doLast {
    cleanDataDir.execute()
}

clean.doLast {
    cleanDataDir.execute()
    cleanLibsDir.execute()
}

task cleanDataDir(type: Delete) {
    delete fileTree(dir: 'data')
}

integrationTest {
    doFirst {
        startElasticsearch {
            elasticsearchVersion = esVersion
            httpHost = "localhost"
            httpPort = 9200
            transportPort = 9300
            dataDir = file("$buildDir/elastic")
            logsDir = file("$buildDir/elastic/logs")
        }
    }

    doLast {
        stopElasticsearch {
            httpHost = "localhost"
            httpPort = 9200
        }
    }
}

gradle.taskGraph.afterTask { Task task, TaskState taskState ->
    if (task.name == "integrationTest") {
        stopElasticsearch {
            httpHost = "localhost"
            httpPort = 9200
        }
    }
}

bootRun {
    jvmArgs('-Dspring.output.ansi.enabled=always')
    addResources = true
}
// enable if you wish to package this plugin as a standalone application
bootRepackage.enabled = false

apply from: "gradle/documentation.gradle"

apply from: "gradle/publish.gradle"

grailsPublish {
    user = System.getenv("BINTRAY_USER") ?: project.bintrayUser
    key = System.getenv("BINTRAY_KEY") ?: project.bintrayKey
    githubSlug = 'cgoIT/elasticsearch-grails-plugin'
    license {
        name = 'Apache-2.0'
    }
    title = "Elasticsearch Grails Plugin"
    repo = "maven"
    desc = """Elasticsearch is a search server based on Lucene. It provides a distributed, multitenant-capable 
full-text search engine with an HTTP web interface and schema-free JSON documents. Elasticsearch is developed in 
Java and is released as open source under the terms of the Apache License. 
This is the Grails 3 plugin to support Elasticsearch up to Version 7.7.1."""
    developers = [
            noam: 'Noam Y. Tenne',
            macrcos: 'Marcos Carceles',
            puneet: 'Puneet Behl',
            james: 'James Kleeh',
            cgoit: 'Carsten GÃ¶tzinger'
    ]
}

bintray {
    user = System.getenv("BINTRAY_USER") ?: project.bintrayUser
    key = System.getenv("BINTRAY_KEY") ?: project.bintrayKey

    publications = ['maven']

    publish = true

    pkg {
        repo = 'maven'
        name = project.name
        websiteUrl = "https://github.com/cgoIT/$repoName"
        issueTrackerUrl = "https://github.com/cgoIT/$repoName/issues"
        vcsUrl = "https://github.com/cgoIT/${repoName}.git"
        licenses = ['Apache-2.0']
        labels = ['grails', 'plugin', 'grails-plugin', 'elastic', 'ElasticSearch', repoName]
        version {
            name = project.version
            attributes = ['grails-plugin': "$project.group:$project.name"]
        }
    }
}

bintrayUpload.dependsOn = [sourcesJar, docs]
publish.dependsOn = [bintrayUpload]

